# skip boilerplate check

# [opt] Billing account id - overrides default if set
billing_account_id: 01FF42-62CE82-5861FD

# [opt] Billing alerts config - overrides default if set
billing_alert:
  amount: 500
  thresholds:
    current: [ 0.5, 0.8 ]
    forecasted: [ 0.5, 0.8 ]
  credit_treatment: INCLUDE_ALL_CREDITS

# [opt] DNS zones to be created as children of the environment_dns_zone defined in defaults
# dns_zones:
#   - lorem
#   - ipsum

# [opt] Contacts for billing alerts and important notifications
# essential_contacts:
#   - matt@onqlave.com

# Folder the project will be created as children of
folder_id: folders/468287933712

# [opt] Authoritative IAM bindings in group => [roles] format
group_iam:
  onqlave-devops@onqlave.com:
    - roles/compute.admin
    - roles/resourcemanager.projectIamAdmin
    - roles/storage.admin
    - roles/iam.serviceAccountAdmin
    - roles/iam.serviceAccountUser
    - roles/monitoring.admin

  onqlave-developers@onqlave.com:
    - roles/monitoring.editor

# [opt] Authoritative IAM bindings in role => [principals] format
# Generally used to grant roles to service accounts external to the project
#iam:
#  roles/iam.serviceAccountUser:
#    - serviceAccount:onqlave-dev-cp-0-bastion@onqlave-dev-cp-0.iam.gserviceaccount.com

# [opt] Service robots and keys they will be assigned as cryptoKeyEncrypterDecrypter
# in service => [keys] format
kms_service_agents:
  compute: [ compute ]
  storage: [ storage ]

# [opt] Labels for the project - merged with the ones defined in defaults
labels:
  environment: development

# [opt] Org policy overrides defined at project level
org_policies:
  constraints/compute.disableGuestAttributesAccess:
    enforce: true

# [opt] Service account to create for the project and their roles on the project
# in name => [roles] format
# service_accounts:
#   another-service-account:
#     - roles/compute.admin
#   my-service-account:
#     - roles/compute.admin

# [opt] APIs to enable on the project.
services:
  - storage.googleapis.com
  - stackdriver.googleapis.com
  - compute.googleapis.com
  - serviceusage.googleapis.com
  - networkmanagement.googleapis.com
  - servicenetworking.googleapis.com
  - monitoring.googleapis.com

# [opt] Roles to assign to the service identities in service => [roles] format
service_identities_iam:
  compute:
    - roles/storage.objectViewer

  # [opt] VPC setup.
  # If set enables the `compute.googleapis.com` service and configures
  # service project attachment
vpc:
  # [opt] If set, enables the container API
  gke_setup:
    # Grants "roles/container.hostServiceAgentUser" to the container robot if set
    enable_host_service_agent: true

    # Grants  "roles/compute.securityAdmin" to the container robot if set
    enable_security_admin: true

  # Host project the project will be service project of
  host_project: onqlave-dev-net-spoke-0

  # [opt] Subnets in the host project where principals will be granted networkUser
  # in region/subnet-name => [principals]
  subnets_iam:
    australia-southeast1/dev-default-ase1:
      - group:onqlave-devops@onqlave.com
